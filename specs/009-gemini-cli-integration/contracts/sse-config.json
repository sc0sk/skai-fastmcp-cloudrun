{
  "//": "==========================================================================",
  "//": "Gemini CLI Configuration: Hansard MCP Server (SSE Transport)",
  "//": "==========================================================================",
  "//": "",
  "//": "PURPOSE: Production configuration for connecting Gemini CLI to remote",
  "//": "         Hansard MCP server deployed on Google Cloud Run via SSE transport.",
  "//": "",
  "//": "TRANSPORT: SSE (Server-Sent Events) - HTTP connection to remote endpoint",
  "//": "USE CASE: Production, team collaboration, shared cloud database access",
  "//": "",
  "//": "SETUP INSTRUCTIONS:",
  "//": "1. Deploy Hansard MCP server to Cloud Run (see deployment docs)",
  "//": "2. Obtain Cloud Run service URL (format: https://SERVICE-PROJECT.a.run.app)",
  "//": "3. Generate authentication token:",
  "//": "   - Option A: gcloud auth print-identity-token",
  "//": "   - Option B: Service account key with roles/run.invoker permission",
  "//": "4. Copy this mcpServers configuration block",
  "//": "5. Paste into your Gemini CLI config file:",
  "//": "   - macOS/Linux: ~/.config/gemini-cli/config.json",
  "//": "   - Windows: %APPDATA%/gemini-cli/config.json",
  "//": "6. Update 'url' with your Cloud Run service URL",
  "//": "7. Update 'Authorization' header with your token",
  "//": "8. Restart Gemini CLI: gemini restart",
  "//": "",
  "//": "==========================================================================",

  "mcpServers": {
    "hansard": {
      "//": "---------- TRANSPORT CONFIGURATION ----------",
      "transport": "sse",
      "//": "Transport type: SSE (Server-Sent Events over HTTP)",
      "//": "Alternative: 'stdio' for local development (see stdio-config.json)",

      "url": "https://hansard-mcp-server-PROJECT_ID.a.run.app",
      "//": "Cloud Run service URL. MUST be HTTPS (HTTP only allowed for localhost).",
      "//": "Format: https://SERVICE_NAME-PROJECT_ID.REGION.run.app",
      "//": "Example: https://hansard-mcp-server-my-gcp-project.a.run.app",
      "//": "",
      "//": "TO FIND YOUR URL:",
      "//": "  gcloud run services describe hansard-mcp-server --format='value(status.url)'",

      "//": "---------- AUTHENTICATION ----------",
      "headers": {
        "Authorization": "Bearer YOUR_IDENTITY_TOKEN_HERE",
        "//": "REQUIRED: Google Cloud identity token for Cloud Run authentication.",
        "//": "",
        "//": "OPTION A - User Identity Token (short-lived, ~1 hour):",
        "//": "  gcloud auth print-identity-token",
        "//": "",
        "//": "OPTION B - Service Account Token (programmatic access):",
        "//": "  1. Create service account:",
        "//": "     gcloud iam service-accounts create gemini-cli-user",
        "//": "  2. Grant Cloud Run Invoker role:",
        "//": "     gcloud run services add-iam-policy-binding hansard-mcp-server \\",
        "//": "       --member='serviceAccount:gemini-cli-user@PROJECT_ID.iam.gserviceaccount.com' \\",
        "//": "       --role='roles/run.invoker'",
        "//": "  3. Generate token:",
        "//": "     gcloud auth print-identity-token --impersonate-service-account=gemini-cli-user@PROJECT_ID.iam.gserviceaccount.com",
        "//": "",
        "//": "SECURITY WARNING:",
        "//": "- Tokens expire (typically 1 hour for user tokens)",
        "//": "- Do NOT commit tokens to version control",
        "//": "- Rotate tokens regularly for production use",
        "//": "- Consider using gcloud SDK for automatic token refresh",

        "Content-Type": "application/json",
        "//": "Optional: Explicitly set content type for SSE requests."
      },

      "//": "---------- OPTIONAL PARAMETERS ----------",
      "timeout": 60,
      "//": "Connection timeout in seconds. Default: 30",
      "//": "Increase for slow network or large database queries.",
      "//": "Cloud Run cold starts can take 10-30 seconds on first request.",

      "description": "Australian Hansard parliamentary speech search (production Cloud Run)",
      "//": "User-facing description shown in Gemini CLI interface."
    }
  },

  "//": "==========================================================================",
  "//": "ADVANCED CONFIGURATION EXAMPLES",
  "//": "==========================================================================",

  "//": "---------- Example: Development Cloud Run (Allow Unauthenticated) ----------",
  "//": "If your Cloud Run service is deployed with --allow-unauthenticated,",
  "//": "you can omit the Authorization header:",
  "//": "",
  "//": "\"mcpServers\": {",
  "//": "  \"hansard\": {",
  "//": "    \"transport\": \"sse\",",
  "//": "    \"url\": \"https://hansard-mcp-dev-PROJECT_ID.a.run.app\",",
  "//": "    \"description\": \"Hansard MCP (development - no auth)\"",
  "//": "  }",
  "//": "}",

  "//": "---------- Example: Custom Headers ----------",
  "//": "Add custom headers for logging, tracing, or rate limiting:",
  "//": "",
  "//": "\"headers\": {",
  "//": "  \"Authorization\": \"Bearer TOKEN\",",
  "//": "  \"X-User-ID\": \"user@example.com\",",
  "//": "  \"X-Request-Source\": \"gemini-cli\",",
  "//": "  \"X-Cloud-Trace-Context\": \"TRACE_ID/SPAN_ID;o=TRACE_TRUE\"",
  "//": "}",

  "//": "---------- Example: Environment-Based Token ----------",
  "//": "Use environment variable for token (requires Gemini CLI support):",
  "//": "",
  "//": "\"headers\": {",
  "//": "  \"Authorization\": \"Bearer ${HANSARD_TOKEN}\"",
  "//": "}",
  "//": "",
  "//": "Then set: export HANSARD_TOKEN=$(gcloud auth print-identity-token)"
}
