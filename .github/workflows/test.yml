name: Run Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    name: Run Unit and Integration Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv sync --no-dev

      - name: Run linter (ruff)
        run: |
          uv run ruff check src/ tests/ || true

      - name: Run type checker (mypy)
        run: |
          uv run mypy src/ || true

      - name: Run unit tests
        run: |
          uv run pytest tests/unit/ -v --cov=src --cov-report=term-missing || true

      - name: Build Docker image
        run: |
          docker build -t hansard-mcp:test .

      - name: Test Docker image
        run: |
          # Start container in background
          docker run -d \
            -p 8080:8080 \
            -e PORT=8080 \
            -e DANGEROUSLY_OMIT_AUTH=true \
            -e GCP_PROJECT_ID=test \
            -e CLOUDSQL_INSTANCE=test \
            --name hansard-mcp-test \
            hansard-mcp:test

          # Wait for container to start
          sleep 10

          # Test health endpoint
          curl -f http://localhost:8080/health || (docker logs hansard-mcp-test && exit 1)

          # Cleanup
          docker rm -f hansard-mcp-test

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
